<%= form_for @changeset,
             villa_attack_movement_path(@conn, :create, @current_villa.id),
             [method: :post],
             fn f -> %>
  <%= if f.errors != [] do %>
    <div class="alert alert-danger">
      <p>Please check the errors below:</p>
      <ul>
        <!-- FIXME: This does not display the errors of the nested changeset.
          After upgrading to phoenix_ecto 2.0, this has to be updated.
          See https://github.com/phoenixframework/phoenix_ecto/blob/90989c881a4276d6768d339343cf71eacfadae3b/CHANGELOG.md#v200. -->
        <%= for {attr, message} <- f.errors do %>
          <li><%= humanize(attr) %> <%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= inputs_for f, :attack_movements, fn fa -> %>
    <!-- FIXME: This is a hack. It is used because nested changesets are only
      supported one-way in the version of Ecto used currently (1.0). belongs_to
      associations cannot be changed via changesets while has_many associations
      can. Thus, this page depends on a Villa changeset where an AttackMovement
      changeset would provide a much more elegant solution.
      See https://github.com/elixir-lang/ecto/issues/1102 -->
    <%= if is_nil fa.model.id do %>
      <%= hidden_input(fa, :target_id) %>

      <div class="form-group">
        <label class="control-label">
          Target:
        </label>
        <%= fa.model.target %>
      </div>

      <div class="form-group">
        <label class="control-label">
          Units:
        </label>

        <table>
          <tr>
            <%= for {k, u} <- LaFamiglia.Unit.all do %>
              <td>
                <%= k %>: <%= text_input fa, k, class: :"form-control" %>
                (out of <%= LaFamiglia.Unit.number(@current_villa, u) %>)
              </td>
            <% end %>
          </tr>
        </table>
      </div>
    <% end %>
  <% end %>

  <button class="btn btn-primary" type="submit">Send</button>
<% end %>
